{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","helpers/CalendarMsg.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouters.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventLoaded","eventUpdated","eventDeleted","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","console","log","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","CalendarEvent","title","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setformValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","contentLabel","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","onDoubleClickEvent","onSelectEvent","onView","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onSelectSlot","selectable","view","components","PrivateRoute","children","to","PublicRoute","AppRouters","path","element","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3444db10.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    \r\n    eventAddNew: '[event] Add new',\r\n    evetStartAddNew: '[event] Start add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    eventLogout: '[event] Logout event',\r\n    \r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","//import moment from 'moment';\r\nimport { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action) => {\r\n    switch ( action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n                return {\r\n                    ...state,\r\n                    events: [\r\n                        ...state.events,\r\n                        action.payload\r\n                    ]\r\n                }\r\n        case types.eventClearActiveEvent:\r\n                return {\r\n                        ...state,\r\n                        activeEvent: null\r\n                }\r\n        \r\n        case types.eventUpdated:\r\n                return {\r\n                        ...state,\r\n                        events: state.events.map(\r\n                            e => ( e.id === action.payload.id ) ? action.payload : e\r\n                        )\r\n                }\r\n        case types.eventDeleted:\r\n            return {\r\n                    ...state,\r\n                    events: state.events.filter(\r\n                        e => ( e.id !== state.activeEvent.id )\r\n                    ),\r\n                    activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n                return {\r\n                    ...state,\r\n                    events: [ ...action.payload ]\r\n                }\r\n\r\n        case types.eventLogout:\r\n                    return {\r\n                        ...initialState\r\n                    }\r\n        \r\n        \r\n        default:\r\n            return state ;\r\n    }\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n            \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\nexport const rootReducer = combineReducers ({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )  \r\n);\r\n\r\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data , method = 'GET') => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n           body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport{\r\n    fetchSinToken,\r\n    fetchConToken,\r\n}","import moment from 'moment'\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n\r\n}","import { types } from \"../types/types\";\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        console.log(\"event\", event)\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            console.log(body)\r\n\r\n            if ( body.ok ) { //se inserto en la bd\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log( event );\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ \r\n    type: types.eventClearActiveEvent \r\n});\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\n\r\nexport const eventLogout =() => ({ type: types.eventLogout });\r\n","import Swal from 'sweetalert2';\r\nimport { fetchSinToken, fetchConToken } from '../helpers/fetch';\r\nimport { types } from '../types/types'   ;\r\nimport { eventLogout } from './events';\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        console.log(email, password)\r\n\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        console.log(body)\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear(); \r\n        dispatch( eventLogout() )\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin,startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'vamosManaos@hotmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Nando',\r\n        rEmail: 'nando@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n\r\n\r\n    const handleLogin = (e) => {\r\n\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ) )\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error');\r\n        }\r\n        // console.log('?')\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <span> { title } </span>\r\n            <strong> { user.name } </strong>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import { types } from '../types/types';\r\n\r\n\r\n\r\nexport const uiOpenModal = () => ({ \r\n    type: types.uiOpenModal \r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n     type: types.uiCloseModal\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n\r\n  // Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus = now.clone().add( 1 , 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlus.toDate() );\r\n    const [titleValid, setTitleValid] = useState( true )\r\n\r\n    const [formValues, setformValues] = useState( initEvent )\r\n\r\n    const { notes, title ,start, end} = formValues;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setformValues( activeEvent );\r\n        } else {\r\n            setformValues( initEvent );\r\n        }\r\n    }, [activeEvent, setformValues])\r\n\r\n\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setformValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setformValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n        \r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setformValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        console.log( formValues );\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd )){\r\n            Swal.fire('Error', 'fecha fin debe ser mayor que la fecha de inicio');\r\n            return;\r\n        }\r\n\r\n        if( title.trim().length < 2){\r\n            return setTitleValid( false );\r\n        }\r\n\r\n        if ( activeEvent ) { \r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues) );\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setformValues( initEvent );\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={ modalOpen }\r\n        // onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n        contentLabel=\"Example Modal\"\r\n        closeTimeoutMS={ 200 }\r\n        >\r\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\r\n\r\n            <hr />\r\n            <form className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        className=\"form-control\"\r\n                        minDate={ dateStart }\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className= {`form-control  ${ !titleValid && 'is-invalid '}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { messages } from '../../helpers/CalendarMsg';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment().locale('es');\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    const { events, activeEvent} = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n\r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n    const onDoubleClickEvent = (e) =>{\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) =>{\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n\r\n    const onViewChange = (e) =>{\r\n        setlastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: '0,8',\r\n            display: 'block'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    \r\n\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e)\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                onDoubleClickEvent={ onDoubleClickEvent }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                messages= { messages }\r\n                eventPropGetter= { eventStyleGetter }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView}\r\n                components= {{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n \n \n \nconst PrivateRoute = ({children}) => {\n    \nconst {uid} = useSelector(state => state.auth)\n    return (\n        !!uid\n        ?   children  \n        :  <Navigate to=\"/login\" />\n    )              \n}\n \n \nexport default PrivateRoute;\n\n\n","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n \nconst PublicRoute = ({children}) => {\n    const {uid} = useSelector(state => state.auth)\n  \n    return ( !!uid\n        ? <Navigate to=\"/\" />\n        : children \n        \n        )\n        \n}\n \nexport default PublicRoute;\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n \r\n  \r\n \r\nexport const AppRouters = () => {\r\n \r\n  const dispatch = useDispatch();\r\n \r\n  const {checking} = useSelector(state => state.auth)\r\n \r\n  useEffect(() => {\r\n      dispatch(startChecking())\r\n \r\n  }, [dispatch]);\r\n  \r\n  if (checking){\r\n    return (<h5>Espere...</h5>);\r\n  }\r\n \r\n  return (\r\n        <Routes>\r\n          <Route path=\"/login\" element={\r\n                    <PublicRoute>\r\n                        <LoginScreen />\r\n                    </PublicRoute>\r\n                } \r\n                />\r\n          \r\n          <Route path=\"/*\"  element ={\r\n                  <PrivateRoute>\r\n                       <CalendarScreen/>\r\n                  </PrivateRoute>\r\n              }\r\n          />\r\n          {/* <Route path=\"*\" element={<CalendarScreen />} />   */}\r\n \r\n        </Routes>\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouters } from './routers/AppRouters';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouters />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <CalendarApp />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}